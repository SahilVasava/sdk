/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721SubscriptionModule,
  ERC721SubscriptionModuleInterface,
} from "../../../contracts/ERC721SubscriptionModule.sol/ERC721SubscriptionModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "erc721collection",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transferETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "triggerPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105d13803806105d183398101604081905261002f91610089565b600080546001600160a01b039586166001600160a01b03199182161790915560018054949095169316929092179092556002919091556003556100cc565b80516001600160a01b038116811461008457600080fd5b919050565b6000806000806080858703121561009f57600080fd5b6100a88561006d565b93506100b66020860161006d565b6040860151606090960151949790965092505050565b6104f6806100db6000396000f3fe6080604052600436106100555760003560e01c806363a0ebc01461005a57806367e404ce146100975780639de585c1146100b7578063a035b1fe146100d9578063e28d717b146100fd578063ef78d4fd14610105575b600080fd5b34801561006657600080fd5b5060005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a357600080fd5b5060015461007a906001600160a01b031681565b3480156100c357600080fd5b506100d76100d236600461039c565b61011b565b005b3480156100e557600080fd5b506100ef60025481565b60405190815260200161008e565b6100d76102ff565b34801561011157600080fd5b506100ef60035481565b6000546001546040516323b872dd60e01b81526001600160a01b0391821660048201528482166024820152604481018490529116906323b872dd90606401600060405180830381600087803b15801561017357600080fd5b505af1158015610187573d6000803e3d6000fd5b505050506001600160a01b0382166000908152600460205260409020546003546101b190826103d4565b4210156102055760405162461bcd60e51b815260206004820152601e60248201527f5061796d656e7420706572696f6420686173206e6f7420656c6170736564000060448201526064015b60405180910390fd5b6002546040805163e28d717b60e01b602082015281516004818303018152602482019283905263468721a760e01b90925285926000926001600160a01b0385169263468721a79261025c923092879060280161041c565b6020604051808303816000875af115801561027b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029f9190610497565b9050806102df5760405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b60448201526064016101fc565b505050506001600160a01b03166000908152600460205260409020429055565b6001546040516000916001600160a01b03169034908381818185875af1925050503d806000811461034c576040519150601f19603f3d011682016040523d82523d6000602084013e610351565b606091505b50509050806103995760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101fc565b50565b600080604083850312156103af57600080fd5b82356001600160a01b03811681146103c657600080fd5b946020939093013593505050565b600082198211156103f557634e487b7160e01b600052601160045260246000fd5b500190565b6002811061041857634e487b7160e01b600052602160045260246000fd5b9052565b60018060a01b038516815260006020858184015260806040840152845180608085015260005b8181101561045e5786810183015185820160a001528201610442565b8181111561047057600060a083870101525b50601f01601f1916830160a001915061048e905060608301846103fa565b95945050505050565b6000602082840312156104a957600080fd5b815180151581146104b957600080fd5b939250505056fea2646970667358221220483195df12d28fac2bea5a7b43930b0021e5f25b7e6de351c9fbaf30e8f8dde564736f6c634300080f0033";

type ERC721SubscriptionModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721SubscriptionModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721SubscriptionModule__factory extends ContractFactory {
  constructor(...args: ERC721SubscriptionModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc721collection: PromiseOrValue<string>,
    _sender: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721SubscriptionModule> {
    return super.deploy(
      _erc721collection,
      _sender,
      _price,
      _period,
      overrides || {}
    ) as Promise<ERC721SubscriptionModule>;
  }
  override getDeployTransaction(
    _erc721collection: PromiseOrValue<string>,
    _sender: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc721collection,
      _sender,
      _price,
      _period,
      overrides || {}
    );
  }
  override attach(address: string): ERC721SubscriptionModule {
    return super.attach(address) as ERC721SubscriptionModule;
  }
  override connect(signer: Signer): ERC721SubscriptionModule__factory {
    return super.connect(signer) as ERC721SubscriptionModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721SubscriptionModuleInterface {
    return new utils.Interface(_abi) as ERC721SubscriptionModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721SubscriptionModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721SubscriptionModule;
  }
}
